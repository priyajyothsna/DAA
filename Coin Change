#include <stdio.h>
#include<stdlib.h>
#include <limits.h>
int MIN(int a,int b)
{
    if(a>b)
    return b;
    else
    return a;
}
int change(int *dp, int *coins, int coinsSize, int amount)
{
    INT_MAX;
    int best = INT_MAX;
    if (amount < 0)
        return INT_MAX;
        
    if (dp[amount] != -1)
        return dp[amount];
   
    if (amount == 0)
        return 0;
   
    int i;
    
    for (i = 0; i < coinsSize; i++) {
        int coin = coins[i];
        int r = change(dp, coins, coinsSize, amount - coin);
        if (r != INT_MAX)
            best = MIN(best, r + 1);
    }

    dp[amount] = best;
    return best;
}

int coinChange(int* coins, int coinsSize, int amount)
{
    int *dp = malloc(sizeof(int) * (amount + 1));
    int i, ret;
   
    for (i = 0; i <= amount; i++)
        dp[i] = -1; // unset
   
    ret = change(dp, coins, coinsSize, amount);
   
    free(dp);
   
    return ret == INT_MAX ? -1 : ret;
}
int main()
{
    int coins[100],amount,n,i;
    printf("enter size of array");
    scanf("%d",&n);
    printf("enter amount");
    scanf("%d",&amount);
    printf("enter array elements");
    for(i=0;i<n;i++)
    scanf("%d",&coins[i]);
    int res;
    res=coinChange(coins,n,amount);
    printf("the min no of coins required are  %d",res);
    return 0;
}
